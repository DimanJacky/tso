#!/bin/sh
#
# /etc/X11/Xsession
#
# global Xsession file -- used by display managers and xinit (startx)

# $Id: Xsession 967 2005-12-27 07:20:55Z dnusinow $

set -e

PROGNAME=Xsession

message () {
  # pretty-print messages of arbitrary length; use xmessage if it
  # is available and $DISPLAY is set
  MESSAGE="$PROGNAME: $*"
  echo "$MESSAGE" | fold -s -w ${COLUMNS:-80} >&2
  if [ -n "$DISPLAY" ] && which xmessage > /dev/null 2>&1; then
    echo "$MESSAGE" | fold -s -w ${COLUMNS:-80} | xmessage -center -file -
  fi
}

message_nonl () {
  # pretty-print messages of arbitrary length (no trailing newline); use
  # xmessage if it is available and $DISPLAY is set
  MESSAGE="$PROGNAME: $*"
  echo -n "$MESSAGE" | fold -s -w ${COLUMNS:-80} >&2;
  if [ -n "$DISPLAY" ] && which xmessage > /dev/null 2>&1; then
    echo -n "$MESSAGE" | fold -s -w ${COLUMNS:-80} | xmessage -center -file -
  fi
}

errormsg () {
  # exit script with error
  message "$*"
  exit 1
}

internal_errormsg () {
  # exit script with error; essentially a "THIS SHOULD NEVER HAPPEN" message
  # One big call to message() for the sake of xmessage; if we had two then
  # the user would have dismissed the error we want reported before seeing the
  # request to report it.
  errormsg "$*" \
           "Please report the installed version of the \"x11-common\"" \
           "package and the complete text of this error message to" \
           "<debian-x@lists.debian.org>."
}

# initialize variables for use by all session scripts

OPTIONFILE=/etc/X11/Xsession.options

SYSRESOURCES=/etc/X11/Xresources
USRRESOURCES=$HOME/.Xresources

SYSSESSIONDIR=/etc/X11/Xsession.d
USERXSESSION=$HOME/.xsession
USERXSESSIONRC=$HOME/.xsessionrc
ALTUSERXSESSION=$HOME/.Xsession
ERRFILE=$HOME/.xsession-errors

if [ $USER = pos ]; then
    /usr/bin/xset -dpms
    /usr/bin/kscreend &
    set +e
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr > /tmp/xrandr.log"
    /usr/bin/xterm -e /bin/bash -c '/usr/bin/xrandr --newmode "1366x768_60.00" 85.25 1366 1440 1576 1784 768 771 781 798 -hsync +vsync'
    /usr/bin/xterm -e /bin/bash -c '/usr/bin/xrandr --newmode "568x1000_60.00"   46.25  568 600 656 744  1000 1003 1013 1038 -hsync +vsync'
    /usr/bin/xterm -e /bin/bash -c '/usr/bin/xrandr --newmode "1600x900_60.00"  118.25  1600 1696 1856 2112  900 903 908 934 -hsync +vsync'
    /usr/bin/xterm -e /bin/bash -c '/usr/bin/xrandr --newmode "1920x1080_60.00"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync'
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr --addmode Virtual1 1600x900_60.00"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr --output Virtual1 --mode 1600x900_60.00"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr --addmode HDMI1 1920x1080_60.00"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr --output HDMI1 --mode 1920x1080_60.00 --rotate left"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr --addmode VGA1 1920x1080_60.00"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xrandr --output VGA1 --mode 1920x1080_60.00 --rotate left"

    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xinput list > /tmp/xinput.log"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xinput list-props 'TouchPlanet XTA' > /tmp/xinput-listprops-orig.log 2>/tmp/xinput-listprops.err.log"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xinput set-int-prop 'TouchPlanet XTA' 'Evdev Axis Inversion' 8 1 0"
    # 0.5625 Был во второй строчке после разворота перенем ее в первую строку
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xinput set-prop 'TouchPlanet XTA' 'Coordinate Transformation Matrix' 0.5625 0 0  0 1 0  0 0 1"
    /usr/bin/xterm -e /bin/bash -c '/usr/bin/xinput set-int-prop "TouchPlanet XTA" "Evdev Axes Swap" 8 1'
    #/usr/bin/xterm -e /bin/bash -c "/usr/bin/xinput_calibrator -v --precalib 0 1080 0 1920 --geometry 1080x1920 --output-type xinput > /tmp/cal.txt 2>/tmp/cal2.txt"
    /usr/bin/xterm -e /bin/bash -c "/usr/bin/xinput list-props 'TouchPlanet XTA' > /tmp/xinput-listprops.log 2>/tmp/xinput-listprops.err.log"

    set -e
    cd /tmp
    rm -rf ~/.cache/chromium
    rm -rf ~/.config/chromium
    chromium http://127.0.0.1 --window-size=1060,1900 --start-fullscreen --kiosk --noerrdialogs --disable-translate --no-first-run --fast --fast-start --disable-infobars --disable-features=TranslateUI
    #chromium http://127.0.0.1 --window-size=1580,880 --start-fullscreen --kiosk --noerrdialogs --disable-translate --no-first-run --fast --fast-start --disable-infobars --disable-features=TranslateUI
    exit
fi


#alex: asked via Telegram?
if [ -f "$ERRFILE" ]; then
 mv "$ERRFILE" "$ERRFILE.old"
fi

# attempt to create an error file; abort if we cannot
if (umask 077 && touch "$ERRFILE") 2> /dev/null && [ -w "$ERRFILE" ] &&
  [ ! -L "$ERRFILE" ]; then
  chmod 600 "$ERRFILE"
elif ERRFILE=$(tempfile 2> /dev/null); then
  if ! ln -sf "$ERRFILE" "${TMPDIR:=/tmp}/xsession-$USER"; then
    message "warning: unable to symlink \"$TMPDIR/xsession-$USER\" to" \
             "\"$ERRFILE\"; look for session log/errors in" \
             "\"$TMPDIR/xsession-$USER\"."
  fi
else
  errormsg "unable to create X session log/error file; aborting."
fi

exec >>"$ERRFILE" 2>&1

echo "$PROGNAME: X session started for $LOGNAME at $(date)"

# sanity check; is our session script directory present?
if [ ! -d "$SYSSESSIONDIR" ]; then
  errormsg "no \"$SYSSESSIONDIR\" directory found; aborting."
fi

# Attempt to create a file of non-zero length in /tmp; a full filesystem can
# cause mysterious X session failures.  We do not use touch, :, or test -w
# because they won't actually create a file with contents.  We also let standard
# error from tempfile and echo go to the error file to aid the user in
# determining what went wrong.
WRITE_TEST=$(tempfile)
if ! echo "*" >>"$WRITE_TEST"; then
  message "warning: unable to write to ${WRITE_TEST%/*}; X session may exit" \
          "with an error"
fi
rm -f "$WRITE_TEST"

# use run-parts to source every file in the session directory; we source
# instead of executing so that the variables and functions defined above
# are available to the scripts, and so that they can pass variables to each
# other
SESSIONFILES=$(run-parts --list $SYSSESSIONDIR)
if [ -n "$SESSIONFILES" ]; then
  set +e
  for SESSIONFILE in $SESSIONFILES; do
    . $SESSIONFILE
  done
  set -e
fi

exit 0

# vim:set ai et sts=2 sw=2 tw=80:
